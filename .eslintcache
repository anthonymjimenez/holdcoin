[{"/Users/anti/learnCode/JS/project4/holdcoin/src/containers/PrivateContainer.js":"1","/Users/anti/learnCode/JS/project4/holdcoin/src/components/CryptoCard.js":"2","/Users/anti/learnCode/JS/project4/holdcoin/src/containers/UserContainer.js":"3","/Users/anti/learnCode/JS/project4/holdcoin/src/components/TransactionForm.js":"4","/Users/anti/learnCode/JS/project4/holdcoin/src/LandPage.js":"5","/Users/anti/learnCode/JS/project4/holdcoin/src/context/use-auth.js":"6","/Users/anti/learnCode/JS/project4/holdcoin/src/utils/utils.js":"7","/Users/anti/learnCode/JS/project4/holdcoin/src/routes/PrivateRoute.js":"8","/Users/anti/learnCode/JS/project4/holdcoin/src/App.js":"9","/Users/anti/learnCode/JS/project4/holdcoin/src/routes/PublicRoute.js":"10","/Users/anti/learnCode/JS/project4/holdcoin/src/components/Nav.js":"11","/Users/anti/learnCode/JS/project4/holdcoin/src/components/Blockfolio.js":"12","/Users/anti/learnCode/JS/project4/holdcoin/src/components/CryptoLink.js":"13","/Users/anti/learnCode/JS/project4/holdcoin/src/containers/BlockLinkContainer.js":"14","/Users/anti/learnCode/JS/project4/holdcoin/src/components/BlockLink.js":"15","/Users/anti/learnCode/JS/project4/holdcoin/src/components/UserInfo.js":"16","/Users/anti/learnCode/JS/project4/holdcoin/src/components/LoginForm.js":"17","/Users/anti/learnCode/JS/project4/holdcoin/src/index.js":"18","/Users/anti/learnCode/JS/project4/holdcoin/src/components/SignupForm.js":"19"},{"size":1082,"mtime":1606963933504,"results":"20","hashOfConfig":"21"},{"size":2620,"mtime":1606966859544,"results":"22","hashOfConfig":"21"},{"size":540,"mtime":1606960091113,"results":"23","hashOfConfig":"21"},{"size":2947,"mtime":1606957634067,"results":"24","hashOfConfig":"21"},{"size":770,"mtime":1606956244189,"results":"25","hashOfConfig":"21"},{"size":3194,"mtime":1606960282583,"results":"26","hashOfConfig":"21"},{"size":1219,"mtime":1606966765117,"results":"27","hashOfConfig":"21"},{"size":595,"mtime":1606956277963,"results":"28","hashOfConfig":"21"},{"size":1784,"mtime":1606965873769,"results":"29","hashOfConfig":"21"},{"size":741,"mtime":1606956275251,"results":"30","hashOfConfig":"21"},{"size":593,"mtime":1606967914847,"results":"31","hashOfConfig":"21"},{"size":1375,"mtime":1606968068018,"results":"32","hashOfConfig":"21"},{"size":362,"mtime":1606963498773,"results":"33","hashOfConfig":"21"},{"size":385,"mtime":1606963450037,"results":"34","hashOfConfig":"21"},{"size":374,"mtime":1606963526217,"results":"35","hashOfConfig":"21"},{"size":527,"mtime":1606967721955,"results":"36","hashOfConfig":"21"},{"size":1231,"mtime":1606931515757,"results":"37","hashOfConfig":"21"},{"size":357,"mtime":1606865985574,"results":"38","hashOfConfig":"21"},{"size":1575,"mtime":1606776806233,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"11eq7px",{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anti/learnCode/JS/project4/holdcoin/src/containers/PrivateContainer.js",["88"],"import React, { useEffect, useState } from \"react\";\nimport CryptoContainer from \"./CryptoContainer\";\nimport UserContainer from \"./UserContainer\";\nimport { url, appendUserInfo } from \"../utils/utils\";\nimport { useAuth } from \"../context/use-auth\";\n\nfunction PrivateContainer({ cryptos }) {\n  let [cryptoData, setCryptoData] = useState([]);\n//useAuth grab user use to render user crypto quickinfo\n// render cryptos and only append userinfo in crypto card?\n  let auth = useAuth()\n  useEffect(() => {\n    (async () => {\n      const results = await fetch(url);\n      const data = await results.json();\n\n    //   setUser(await signInUser());\n      //make fetch to user info don't set to hook, just send to appendUserInfo(, userData)\n      setCryptoData(data);\n      appendUserInfo(setCryptoData, auth.user);\n    })();\n  }, []);\n\n  return (\n    <div>\n          {console.log(auth.user)}\n\n      {console.log(cryptoData)}\n      <UserContainer cryptos={cryptoData.filter((c) => c.userData)} />\n      <CryptoContainer cryptos={cryptoData} />\n    </div>\n  );\n}\n\nexport default PrivateContainer;\n",["89","90"],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/CryptoCard.js",["91","92","93"],"import React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/use-auth\";\nimport { showurl, isoId, owned, financial, find } from \"../utils/utils\";\nimport { useLocation } from \"react-router-dom\";\nimport TransactionForm from \"./TransactionForm\";\n\nfunction CryptoCard(props) {\n  const auth = useAuth();\n  const [crypto, setCrypto] = useState({});\n  const [displayForm, setDisplayForm] = useState(false);\n  const [userData, setUserData] = useState({})\n  const location = useLocation();\n  console.log(userData)\n  useEffect(() => {\n    (async () => {\n      let id = isoId(location.pathname);\n      let resp = await fetch(`${showurl}${id}`);\n      let data = await resp.json();\n      // need to make fetch to userinfo and append\n      setCrypto(data[0]);\n     setUserData(find(crypto, auth.user))\n     })()\n    // const interval = setInterval(async () => {\n    //   let id = isoId(location.pathname);\n    //   let resp = await fetch(`${showurl}${id}`);\n    //   let data = await resp.json();\n    //   // need to make fetch to userinfo and append\n    //   console.log(\"MMM\");\n    //   setCrypto(data[0]);\n    // }, 10000);\n    // return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <img\n        src={crypto?.logo_url}\n        alt={crypto?.symbol + \"logo\"}\n        width=\"300\"\n        height=\"300\"\n      />\n      <h3>{crypto.name}({crypto.symbol})</h3>\n      <h3>Current Price: {financial(crypto.price)}</h3>\n      <h3>All-Time High: ${financial(crypto.high)} was set on {crypto.high_timestamp?.split('T')[0]}</h3>\n      <h3>Year to Date Returns: {financial(crypto.ytd?.price_change_pct * 100)}% </h3>\n      <h3>Thirty Day Returns: {financial(crypto['30d']?.price_change_pct * 100)}% </h3> \n\n      <h3>Market Cap: ${crypto.market_cap}</h3>\n      {console.log(crypto)}\n\n      {owned(crypto, auth.user) ? (\n        <>\n          <h2>You own this crypto!</h2>\n          <a href=\"#\" onClick={() => setDisplayForm(!displayForm)}>\n            <h2>Buy more?</h2>\n          </a>\n          <h4>Coins Owned: userData.size</h4>\n          <h4>Total Spent: userData.cost</h4>\n          <h4>\n            Total Return: crypto.currentPrice * userData.size - userData.averageCost*\n            userData.size{\" \"}\n          </h4>\n        </>\n      ) : (\n        <a href=\"#\" onClick={() => setDisplayForm(!displayForm)}>\n          <h2>Are you ready to start holding?</h2>\n        </a>\n      )}\n      {displayForm && (\n        <TransactionForm\n          crypto={crypto}\n          user={auth.user}\n          updateBalance={auth.updateBalance}\n        />\n      )}\n    </>\n  );\n}\n\nexport default CryptoCard;\n",["94","95"],"/Users/anti/learnCode/JS/project4/holdcoin/src/containers/UserContainer.js",["96","97"],"import React from \"react\";\nimport CryptoLinkContainer from \"./CryptoLinkContainer\";\nimport { NavLink } from \"react-router-dom\";\nimport { getUnique } from \"../utils/utils\";\nimport { useAuth } from \"../context/use-auth\";\n\nfunction UserContainer({cryptos}) {\n  console.log(cryptos)\n  return (\n    <>\n      <h3> Your Cryptos </h3>\n      <CryptoLinkContainer cryptos={cryptos} />\n      <NavLink\n        to={{\n          pathname: `/blockfolio`,\n        }}\n      >\n        Blockfolio\n      </NavLink>\n    </>\n  );\n}\n\nexport default UserContainer;\n","/Users/anti/learnCode/JS/project4/holdcoin/src/components/TransactionForm.js",["98","99","100","101"],"import React, { useState, useEffect } from \"react\";\nimport {showurl, isoId, owned, financial } from '../utils/utils'\n\nexport default function TransactionForm({ crypto, user, updateBalance }) {\n  const [state, setState] = useState({\n    size: 0.001,\n    side: \"buy\",\n    user_id: user?.id,\n    crypto: {},\n    hold_price: 1000,\n    stop_limit: 200,\n  });\n\n  useEffect(() => {\n    setState({ ...state, user_id: user?.id });\n    setState({\n      ...state,\n      crypto: {\n        name: crypto.name,\n        price: parseFloat(crypto.price),\n        symbol: crypto.symbol,\n        max_supply: parseInt(crypto.max_supply),\n      },\n    });\n  }, [user]);\n\n  const handleChange = (e) => {\n    let val = e.target.value;\n    if (e.target.placeholder === \"side\") {\n      val = e.target.checked ? \"buy\" : \"sell\";\n    } \n    setState({ ...state, [e.target.placeholder]: val });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/api/v1/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify(state),\n    })\n      .then((data) => data.json())\n      .then(console.log(user))\n      .then(updateBalance)\n      // .then((data) => {\n      //   console.log(data);\n      // })\n      .catch(console.log);\n  };\n\n  // add to css\n  const formDivStyle = {\n    margin: \"auto\",\n    padding: \"20px\",\n    width: \"80%\",\n  };\n\n  return (\n    <div style={formDivStyle}>\n      <h1>Add Crypto to your Blockfolio</h1>\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>Size</label>\n          <input\n            value={state.size}\n            onChange={handleChange}\n            type=\"number\"\n            placeholder=\"size\"\n          />\n        </div>\n        <h2>Total price: ${financial(state.size * state.crypto.price)}</h2>\n        <div>\n          Buy\n          <label className=\"toggle-switch\">\n            <input\n              type=\"checkbox\"\n              checked={state.side === \"buy\"}\n              onChange={handleChange}\n              placeholder=\"side\"\n              disabled={true}\n            />\n            <span className=\"switch\" />\n          </label>\n        </div>\n        <div className=\"field\">\n          <label>Hold Price</label>\n          <input\n            value={state.hold_price}\n            onChange={handleChange}\n            type=\"number\"\n            placeholder=\"hold_price\"\n          />\n        </div>\n        <div className=\"field\">\n          <label>Stop Limit</label>\n          <input\n            value={state.stop_limit}\n            onChange={handleChange}\n            type=\"number\"\n            placeholder=\"stop_limit\"\n          />\n        </div>\n\n        <button className=\"ui button\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/anti/learnCode/JS/project4/holdcoin/src/LandPage.js",["102"],"import React, { useState } from \"react\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignupForm from \"./components/SignupForm\";\nimport { useAuth } from \"./context/use-auth\";\nfunction LandPage() {\n  \n  let [toggleForms, setToggle] = useState(false);\n\n  const auth = useAuth();\n\n  const renderForm = () =>\n    toggleForms ? (\n      <LoginForm handleLogIn={auth.signin} />\n    ) : (\n      <SignupForm handleSignUp={auth.signup} />\n    );\n\n  return (\n    <li>\n      <a className=\"ui a\" href=\"#\" onClick={() => setToggle(!toggleForms)}>\n        {toggleForms ? <h2>Sign In</h2> : <h2>Log In</h2>}\n      </a>\n      {renderForm()}\n      {console.log(auth.user)}\n      <button onClick={() => auth.signout()}>Signout</button>\n    </li>\n  );\n}\n\nexport default LandPage;\n","/Users/anti/learnCode/JS/project4/holdcoin/src/context/use-auth.js",["103"],"import React, { useState, useEffect, useContext, createContext } from \"react\";\n\nconst authContext = createContext();\n\n// Provider component that wraps your app and makes auth object ...\n\n// ... available to any child component that calls useAuth().\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n\n// ... and re-render when it changes.\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\nconst [auth, setAuth] = useState(false)\n  // Wrap any Firebase methods we want to use making sure ...\n\n  // ... to save the user to state.\n\n  const signin = (state) => {\n    fetch(`http://localhost:3000/api/v1/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ user: state }),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        console.log(data);\n        \n        setAuth(true)\n\n        localStorage.setItem(\"token\", data.jwt);\n        setUser(data.user)\n      })\n      .catch(console.error);\n  };\n  const updateBalance = (data) => {\n    setUser((user) => { return {...user, balance: user.balance - (data.crypto.price * data.transaction.size) }})\n    }\n\n  const signup = (state) => {\n    fetch(`http://localhost:3000/api/v1/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ user: state }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        console.log(data);\n        setAuth(true)\n        localStorage.setItem(\"token\", data.jwt);\n        setUser(data.user)\n      })\n      .catch(console.error);\n  }; //appendUserInfo\n\n  const signInFromToken = async () => {\n    const token = localStorage.getItem(\"token\"); // set user with token if(token & user=dne) <- that means token was set and page has been reset, in that case use token to fetch user\n    // use auth routes to restrict all routes before token is set, then use token to render user\n    if (token) {\n      let resp = await fetch(`http://localhost:3000/api/v1/auto_login`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      let data = await resp.json();\n      setAuth(true)\n      console.log(data)\n      setUser(await data)\n      return true\n    }\n    return false\n  };\n  const signout = () => {\n    localStorage.clear();\n    setUser(false);\n    setAuth(false)\n  };\n  \n  \n\n  // Subscribe to user on mount\n\n  // Because this sets state in the callback it will cause any ...\n\n  // ... component that utilizes this hook to re-render with the ...\n\n  // ... latest auth object.\n\n  useEffect(() => {\n   (() => (user ? setUser(user) : setUser(false)))();\n  }, []);\n\n  // Return the user object and auth methods\n\n  return {\n    user,\n    auth,\n    signin,\n    signup,\n    signout,\n    signInFromToken,\n    updateBalance\n  };\n}\n","/Users/anti/learnCode/JS/project4/holdcoin/src/utils/utils.js",["104"],"export const url =\n  \"https://api.nomics.com/v1/currencies/ticker?key=f5c83eef5bb0cc892333827fb4ebeefb&per-page=5&page=1\";\n\nexport const showurl =\n  \"https://api.nomics.com/v1/currencies/ticker?key=f5c83eef5bb0cc892333827fb4ebeefb&ids=\";\n\nexport const backendAPI = \"http://localhost:3000/api/v1/\";\n\nexport const isoId = (prop) => prop.split(\"/\").slice(-1)[0];\n\nexport const appendUserInfo = (setCryptoData, user) => {\n  setCryptoData((cryptoData) =>\n    cryptoData.map((crypto) => {\n      let userData = user.cryptos.find(({ symbol }) => symbol == crypto.symbol);\n      return userData ? { ...crypto, userData } : crypto;\n    })\n  );\n};\n\nexport const owned = (crypto, user) => {\n  return user.cryptos.some((c) => c.symbol === crypto.symbol);\n};\n\nexport function find(crypto, user) {\n  return user.cryptos.find((c) => c.symbol === crypto.symbol);\n}\n\nexport const financial = (x) => Number.parseFloat(x).toFixed(2);\n\nexport const getUnique = (arr, index = \"symbol\") => {\n  return arr\n    .map((e) => e[index])\n\n    // store the keys of the unique objects\n    .map((e, i, final) => final.indexOf(e) === i && i)\n\n    // eliminate the dead keys & store unique objects\n    .filter((e) => arr[e])\n    .map((e) => arr[e]);\n\n};\n","/Users/anti/learnCode/JS/project4/holdcoin/src/routes/PrivateRoute.js",["105","106"],"import { useAuth } from \"../context/use-auth\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nexport default function PrivateRoute({ children, ...rest }) {\n    let auth = useAuth();\n  \n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n        auth.user ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/public\",\n                state: { from: location }\n              }}\n            />\n            \n          )\n        \n        }\n      />\n    );\n  }","/Users/anti/learnCode/JS/project4/holdcoin/src/App.js",["107","108"],"/Users/anti/learnCode/JS/project4/holdcoin/src/routes/PublicRoute.js",["109"],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/Nav.js",["110","111"],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/Blockfolio.js",["112","113","114"],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/CryptoLink.js",[],"/Users/anti/learnCode/JS/project4/holdcoin/src/containers/BlockLinkContainer.js",["115"],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/BlockLink.js",["116"],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/UserInfo.js",["117"],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/LoginForm.js",[],"/Users/anti/learnCode/JS/project4/holdcoin/src/index.js",[],"/Users/anti/learnCode/JS/project4/holdcoin/src/components/SignupForm.js",[],{"ruleId":"118","severity":1,"message":"119","line":22,"column":6,"nodeType":"120","endLine":22,"endColumn":8,"suggestions":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"118","severity":1,"message":"126","line":32,"column":6,"nodeType":"120","endLine":32,"endColumn":8,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":54,"column":11,"nodeType":"130","endLine":54,"endColumn":68},{"ruleId":"128","severity":1,"message":"129","line":65,"column":9,"nodeType":"130","endLine":65,"endColumn":66},{"ruleId":"122","replacedBy":"131"},{"ruleId":"124","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":19},{"ruleId":"133","severity":1,"message":"137","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":17},{"ruleId":"133","severity":1,"message":"138","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"139","line":2,"column":18,"nodeType":"135","messageId":"136","endLine":2,"endColumn":23},{"ruleId":"133","severity":1,"message":"140","line":2,"column":25,"nodeType":"135","messageId":"136","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"141","line":25,"column":6,"nodeType":"120","endLine":25,"endColumn":12,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"129","line":20,"column":7,"nodeType":"130","endLine":20,"endColumn":76},{"ruleId":"118","severity":1,"message":"143","line":110,"column":6,"nodeType":"120","endLine":110,"endColumn":8,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":14,"column":63,"nodeType":"147","messageId":"148","endLine":14,"endColumn":65},{"ruleId":"133","severity":1,"message":"149","line":3,"column":17,"nodeType":"135","messageId":"136","endLine":3,"endColumn":26},{"ruleId":"133","severity":1,"message":"150","line":3,"column":28,"nodeType":"135","messageId":"136","endLine":3,"endColumn":36},{"ruleId":"133","severity":1,"message":"151","line":3,"column":43,"nodeType":"135","messageId":"136","endLine":3,"endColumn":48},{"ruleId":"118","severity":1,"message":"152","line":24,"column":6,"nodeType":"120","endLine":24,"endColumn":8,"suggestions":"153"},{"ruleId":"118","severity":1,"message":"152","line":11,"column":8,"nodeType":"120","endLine":11,"endColumn":10,"suggestions":"154"},{"ruleId":"133","severity":1,"message":"150","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":24},{"ruleId":"133","severity":1,"message":"149","line":1,"column":26,"nodeType":"135","messageId":"136","endLine":1,"endColumn":35},{"ruleId":"133","severity":1,"message":"150","line":1,"column":28,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"155","line":16,"column":9,"nodeType":"135","messageId":"136","endLine":16,"endColumn":25},{"ruleId":"133","severity":1,"message":"156","line":22,"column":9,"nodeType":"135","messageId":"136","endLine":22,"endColumn":18},{"ruleId":"133","severity":1,"message":"137","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"157","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"158","line":6,"column":7,"nodeType":"135","messageId":"136","endLine":6,"endColumn":11},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth.user'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"React Hook useEffect has missing dependencies: 'auth.user', 'crypto', and 'location.pathname'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUserData' needs the current value of 'crypto'.",["162"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["160"],["161"],"no-unused-vars","'getUnique' is defined but never used.","Identifier","unusedVar","'useAuth' is defined but never used.","'showurl' is defined but never used.","'isoId' is defined but never used.","'owned' is defined but never used.","React Hook useEffect has missing dependencies: 'crypto.max_supply', 'crypto.name', 'crypto.price', 'crypto.symbol', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["163"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["164"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["165"],["166"],"'appendCryptoInfo' is assigned a value but never used.","'getPrices' is assigned a value but never used.","'financial' is defined but never used.","'auth' is assigned a value but never used.",{"desc":"167","fix":"168"},"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},"Update the dependencies array to be: [auth.user]",{"range":"178","text":"179"},"Update the dependencies array to be: [auth.user, crypto, location.pathname]",{"range":"180","text":"181"},"Update the dependencies array to be: [crypto.max_supply, crypto.name, crypto.price, crypto.symbol, state, user]",{"range":"182","text":"183"},"Update the dependencies array to be: [user]",{"range":"184","text":"185"},"Update the dependencies array to be: [auth]",{"range":"186","text":"187"},{"range":"188","text":"187"},[817,819],"[auth.user]",[1190,1192],"[auth.user, crypto, location.pathname]",[639,645],"[crypto.max_supply, crypto.name, crypto.price, crypto.symbol, state, user]",[3028,3030],"[user]",[916,918],"[auth]",[388,390]]